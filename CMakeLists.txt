CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(your-project-name-here)

MESSAGE(STATUS "Adding CMakeFind for SDL2 and its extensions")
LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/out/build)
MESSAGE("Output directories are set to ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")

MESSAGE(STATUS "Finding SDL2 packages")
FIND_PACKAGE(SDL2 REQUIRED)
FIND_PACKAGE(SDL2_image REQUIRED)
FIND_PACKAGE(SDL2_mixer REQUIRED)
FIND_PACKAGE(SDL2_ttf REQUIRED)

MESSAGE(STATUS "Finding header files")
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/headers)

MESSAGE(STATUS "Finding source files")
FILE(GLOB_RECURSE SOURCES RELATIVE ${CMAKE_SOURCE_DIR} "src/*")

MESSAGE(STATUS "Adding a step to create an executable")
ADD_EXECUTABLE(
  ${PROJECT_NAME} 
  ${SOURCES}
)

MESSAGE(STATUS "Defining include directories")
TARGET_INCLUDE_DIRECTORIES(
  ${PROJECT_NAME} 
  SYSTEM  
  PRIVATE ${SDL2_INCLUDE_DIR}
  PRIVATE ${SDL2_IMAGE_INCLUDE_DIR}
  PRIVATE ${SDL2_MIXER_INCLUDE_DIR}
  PRIVATE ${SDL2_TTF_INCLUDE_DIR}
)

MESSAGE(STATUS "Linking libraries")
TARGET_LINK_LIBRARIES(
  ${PROJECT_NAME}
  PRIVATE ${SDL2_LIBRARY}
  PRIVATE ${SDL2_IMAGE_LIBRARY}
  PRIVATE ${SDL2_MIXER_LIBRARY}
  PRIVATE ${SDL2_TTF_LIBRARY}
)

FOREACH(BinaryFolder ${SDL2_MIXER_DIR} ${SDL2_IMAGE_DIR} ${SDL2_TTF_DIR} ${SDL2_DIR})
  MESSAGE("Redistributing binaries in ${BinaryFolder} to ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
  IF(APPLE)
    ADD_CUSTOM_COMMAND(
      TARGET ${PROJECT_NAME} 
      POST_BUILD 
      COMMAND ${CMAKE_COMMAND} -E copy_directory ${BinaryFolder}/bin/dmg ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
    )
  ENDIF()
  IF(WIN32)
    IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
      ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME}
        POST_BUILD 
        COMMAND ${CMAKE_COMMAND} -E copy_directory ${BinaryFolder}/bin/x64 ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
      )
    ELSEIF(CMAKE_SIZEOF_VOID_P EQUAL 4)
      ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME}
        POST_BUILD 
        COMMAND ${CMAKE_COMMAND} -E copy_directory ${BinaryFolder}/bin/x86 ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
      )
    ENDIF()
  ENDIF()
ENDFOREACH()

MESSAGE(STATUS "Copying resources to ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
FILE(COPY ${CMAKE_SOURCE_DIR}/resources DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})

MESSAGE(STATUS "Setting project standards")
SET_PROPERTY(TARGET ${PROJECT_NAME}  PROPERTY CXX_STANDARD 17)
SET_PROPERTY(TARGET ${PROJECT_NAME}  PROPERTY CXX_STANDARD_REQUIRED ON)
